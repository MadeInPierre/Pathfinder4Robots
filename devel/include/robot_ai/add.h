// Generated by gencpp from file robot_ai/add.msg
// DO NOT EDIT!


#ifndef ROBOT_AI_MESSAGE_ADD_H
#define ROBOT_AI_MESSAGE_ADD_H

#include <ros/service_traits.h>


#include <robot_ai/addRequest.h>
#include <robot_ai/addResponse.h>


namespace robot_ai
{

struct add
{

typedef addRequest Request;
typedef addResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct add
} // namespace robot_ai


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robot_ai::add > {
  static const char* value()
  {
    return "f0b6d69ea10b0cf210cb349d58d59e8f";
  }

  static const char* value(const ::robot_ai::add&) { return value(); }
};

template<>
struct DataType< ::robot_ai::add > {
  static const char* value()
  {
    return "robot_ai/add";
  }

  static const char* value(const ::robot_ai::add&) { return value(); }
};


// service_traits::MD5Sum< ::robot_ai::addRequest> should match 
// service_traits::MD5Sum< ::robot_ai::add > 
template<>
struct MD5Sum< ::robot_ai::addRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robot_ai::add >::value();
  }
  static const char* value(const ::robot_ai::addRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_ai::addRequest> should match 
// service_traits::DataType< ::robot_ai::add > 
template<>
struct DataType< ::robot_ai::addRequest>
{
  static const char* value()
  {
    return DataType< ::robot_ai::add >::value();
  }
  static const char* value(const ::robot_ai::addRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robot_ai::addResponse> should match 
// service_traits::MD5Sum< ::robot_ai::add > 
template<>
struct MD5Sum< ::robot_ai::addResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robot_ai::add >::value();
  }
  static const char* value(const ::robot_ai::addResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robot_ai::addResponse> should match 
// service_traits::DataType< ::robot_ai::add > 
template<>
struct DataType< ::robot_ai::addResponse>
{
  static const char* value()
  {
    return DataType< ::robot_ai::add >::value();
  }
  static const char* value(const ::robot_ai::addResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBOT_AI_MESSAGE_ADD_H

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>// To modify this UML description file, download the open-source UMLet software.
// Uncomment the following line to change the fontsize and font:
fontsize=16
fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced

++
//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>432</x>
      <y>680</y>
      <w>1096</w>
      <h>1696</h>
    </coordinates>
    <panel_attributes>ai
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1904</x>
      <y>0</y>
      <w>464</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>memory
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2416</x>
      <y>0</y>
      <w>464</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>feedback
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1392</x>
      <y>288</y>
      <w>464</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>perception
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1904</x>
      <y>288</y>
      <w>464</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>movement
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>2416</x>
      <y>288</y>
      <w>464</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>navigation
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>464</x>
      <y>728</y>
      <w>576</w>
      <h>1568</h>
    </coordinates>
    <panel_attributes>scheduler
--
*Description*
This is where the user gives the actions the robot has to 
execute. They are defined with XML files located in
/robot_ai/Defintions./

The AI then sends orders the the other packages 
accordingly, and adapts to eventual errors thanks to 
the strategy set by the user.






-
*Classes*


















































































--
*Topics*
Subscriptions :
/  - /game_timer/

Publisher to :
/  - none/
--
*Services*
TODO

bg=white
layer=3
valign=top
halign=left
transparency=50</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1112</x>
      <y>768</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>execution???
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1256</x>
      <y>768</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>timer
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2176</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2048</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>robot_body
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1920</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>map
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2688</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>logger
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2560</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>display
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2432</x>
      <y>48</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>server_gui
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1536</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lidar
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1408</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>recognizer
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1920</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>wheels
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2048</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>actuators
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2176</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>robotarm
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2432</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>localization
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2560</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>pathfinder
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>2688</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>armfinder
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1664</x>
      <y>344</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>camera
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1408</x>
      <y>448</y>
      <w>112</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>skin
--
bg=white
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>184</x>
      <y>680</y>
      <w>224</w>
      <h>512</h>
    </coordinates>
    <panel_attributes>*Legend*
-..</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>200</x>
      <y>720</y>
      <w>192</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>ros namespace
--
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>208</x>
      <y>752</y>
      <w>176</w>
      <h>368</h>
    </coordinates>
    <panel_attributes>ros package
--
*Description*
--
*Folder Structure*
--
*Classes*


















--
*Topics*
--
*Services*


bg=white
halign=left
valign=top
layer=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>992</y>
      <w>160</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>type=actclass
*ai_node.py*
--
/Launched by launch file./
*Methods*
    - runAI()
layer=5
bg=green
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLHierarchy</id>
    <coordinates>
      <x>856</x>
      <y>768</y>
      <w>168</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>type=Package
robot_ai
	msg
	src
		AI
		Definitions
	srv
layer=5
fg=white
bg=black
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>680</x>
      <y>984</y>
      <w>328</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*ai_services.py*
--
*Methods*
    - constructor(department, package)
    - (ServiceResponse)  on_generic_command(request)
    - service_delay
--
*Attributes*
    - string[] AvailableStrategies TODO
    - AICommunication communication
    - Strategy Strategy
    - GameTimer timer

layer=5
bg=yellow
transparency=80</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>832</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>type=actclass
*Node_class.py*
/Launched by launch file/
layer=5
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>880</y>
      <w>160</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>*ROS_linked_class.py*
--
/Methods/
-..


layer=5
bg=yellow
transparency=80</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>648</x>
      <y>1008</y>
      <w>48</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=)-
layer=5</panel_attributes>
    <additional_attributes>20.0;20.0;40.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>1184</y>
      <w>328</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*RobotAI*
--
*Methods*
    - constructor(strategyname, communicationclass)
--
*Attributes*
    - string[] AvailableStrategies TODO
    - AICommunication communication
    - Strategy Strategy
    - GameTimer timer


layer=5
transparency=5
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>944</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*internal_class.py*
--



layer=5
bg=white
transparency=5</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1384</y>
      <w>240</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*Strategy*
--
*Methods*
    - void constructor(xml, actions, orders)
    - bool canContinue()
    - Task getNext()
--
*Attributes*
    - Task[] TASKS

layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>1384</y>
      <w>240</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>*Task*
--
*Methods*
    - void constructor(xml, actions, orders)
    - void loadConditions(xml)
    - bool canContinue()
    - Task getNext()
    - TaskStatus getStatus()
    - TaskStatus getStatusEmoji()
    - void setStatus()
    - void prettyprint()
    - string __repr__()
--
*Attributes*
    - string Name
    - int Reward
    - TaskStatus status
layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>1152</y>
      <w>344</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=.
*ai.py*
-..
layer=4
bg=gray
transparency=60
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>1352</y>
      <w>544</w>
      <h>752</h>
    </coordinates>
    <panel_attributes>lt=.
*ai_classes.py*
-..
layer=4
bg=gray
transparency=60
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>2048</y>
      <w>96</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/TaskStatus/
enum
layer=5
bg=white
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>808</x>
      <y>2048</y>
      <w>96</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/ExecutionMode/
enum
layer=5
bg=white
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>2048</y>
      <w>96</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/ExecutionOrder/
enum
layer=5
bg=white
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1520</y>
      <w>168</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*GameProperties*
--
*Attributes*
    - int GAME_SURATION
    - int REWARD_POINTS

layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>1632</y>
      <w>240</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>*ActionList (Task)*
--
*Methods*
    - void constructor(xml, actions, orders)
    - int getDuration()
    - Task getNext()
    - void refreshStatus()
    - void execute()
--
*Attributes*
    - ExecutionMode executionMode
    - ExecutionOrder executionOrder
    - int Duration
    - Task[] TASKS
layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1632</y>
      <w>240</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>*Action (Task)*
--
*Methods*
    - void constructor(xml, actions, orders)
    - int getDuration()
    - Task getNext()
    - void refreshStatus()
    - void execute()
--
*Attributes*
    - string Ref
    - int Duration
    - Task[] TASKS
layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>1816</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>*Order (Task)*
--
*Methods*
    - void constructor(xml)
    - int getDuration()
    - void execute()
--
*Attributes*
    - string Ref
    - int Duration
    - Task[] TASKS
    - Message Message
    - int TimeTaken
layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>768</x>
      <y>1856</y>
      <w>240</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>*Message*
--
*Methods*
    - void constructor(xml)
    - void check_valid()
    - int, int send(communication_class)
--
*Attributes*
    - string Department
    - string Destination
    - string Command
    - TODO params
layer=6
transparency=0
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>912</x>
      <y>2048</y>
      <w>96</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>/Colors/
enum
layer=5
bg=white
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>704</x>
      <y>2048</y>
      <w>96</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>*Console*
Helper
layer=5
bg=white
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>840</x>
      <y>1152</y>
      <w>184</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>lt=.
*timer.py*
-..
layer=4
bg=gray
transparency=60
group=3</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>848</x>
      <y>1184</y>
      <w>168</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>*GameTimer*
--
*Methods*
    - void constructor()
    - void on_new_time()
/Subscriber to /game_timer/


layer=5
transparency=5
bg=yellow
transparency=50
group=3</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
